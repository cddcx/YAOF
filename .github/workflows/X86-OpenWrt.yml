name: X86-OpenWrt

on:
#  schedule:
#    - cron: 5 6 * * 0
  workflow_dispatch:
  watch:
    types: started

jobs:
  build:
    runs-on: ubuntu-24.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: 显示系统
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        
    - name: 最大化构建空间
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 512
        root-reserve-mb: 4608
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        
    - name: 准备结束
      uses: actions/checkout@main
      
    - name: 初始化构建依赖关系
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo /bin/bash -c "$(curl -sL https://git.io/vokNn)"
        sudo -E apt-fast -y -qq install asciidoc bash bcc bin86 binutils bison bzip2 clang-15 llvm-15 file flex g++ g++-multilib gawk gcc-multilib gettext git gzip help2man intltool libboost-dev libelf-dev libncurses-dev libssl-dev libthread-queue-any-perl libusb-dev libxml-parser-perl make patch perl-modules python3-dev python3-pip python3-pyelftools python3-setuptools rsync sharutils swig time unzip util-linux wget xsltproc zlib1g-dev zip zstd
        sudo -E apt-fast -y -qq install dos2unix dwarves quilt npm jq
        sudo -E npm install -g pnpm
        pip3 install --user -U pylibfdt --break-system-packages
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto
        df -h
        
    - name: 预处理
      run: |
        sudo chown -R runner:runner /home/runner/work/YAOF
        cp -r ./SCRIPTS/X86/. ./SCRIPTS/
        cp -r ./SCRIPTS/. ./
        /bin/bash 01_get_ready.sh
        
    - name: 准备包
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        cp -r ../SCRIPTS/. ./
        /bin/bash 02_prepare_package.sh
        /bin/bash 02_target_only.sh
        /bin/bash 04_remove_upx.sh
        
    - name: QTMD FW4
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        cp -rf ../SEED/X86/config.seed .config
        
    - name: 转换成中文翻译
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        /bin/bash 03_convert_translation.sh
        
    - name: 添加ACL
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        /bin/bash 05_create_acl_for_luci.sh -a
        
    - name: 修复权限
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        sudo -E chmod -R 755 ./08_fix_permissions.sh
        /bin/bash 08_fix_permissions.sh
        
    - name: 配置内核
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        make defconfig
        
    - name: 获取架构
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        TARGET_DEVICE_ARCH="$(grep "^CONFIG_TARGET_.*_.*=y$" ".config" | head -n 1 | sed 's/^CONFIG_TARGET_//g' | awk -F '_' '{print $1}')"
        echo "TARGET_DEVICE_ARCH=${TARGET_DEVICE_ARCH}" >>$GITHUB_ENV
        latest_release="$(curl -s https://github.com/openwrt/openwrt/tags | grep -Eo "v[0-9\.]+\-*r*c*[0-9]*.tar.gz" | sed -n '/[2-9][4-9]/p' | sed -n 1p | sed 's/.tar.gz//g' | sed 's/v//g')"
        echo "latest_release=${latest_release}" >>$GITHUB_ENV
        
    - name: 高速缓冲存储器
      uses: HiGarfield/cachewrtbuild@main
      with:
        mixkey: ${{ env.TARGET_DEVICE_ARCH }}
        prefix: ${{ github.workspace }}/openwrt
        
    - name: 进行下载
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        make download -j50
        
    - name: 编译Openwrt
      working-directory: ${{ github.workspace }}/openwrt
      id: compileopenwrt
      continue-on-error: true
      run: |
        #echo | make kernel_oldconfig -j$(($(nproc) + 1)) 
        make -j$(($(nproc) + 1)) package/network/utils/nftables/refresh V=s
        IGNORE_ERRORS=1 make -j$(($(nproc) + 1))
        echo $?
        
    - name: 如果错误
      working-directory: ${{ github.workspace }}/openwrt
      if: steps.compileopenwrt.outcome == 'failure'
      run: |
        cat ./.config
        echo '================================================================'
        make -j1 V=s
        
    - name: 整理文件
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        # 整理固件包时候,删除您不想要的固件或者文件,让它不需要上传到Actions空间
        rm -rf packages
        rm -rf feeds.buildinfo
        rm -rf version.buildinfo
        rm -rf *kernel.bin
        rm -rf kernel-debug.tar.zs
        rm -rf profiles.json
        rm -rf *rootfs.img
        rm -rf *rootfs.img.gz
        rm -rf *rootfs.tar.gz
        rm -rf *.manifest
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: 上传固件
      uses: actions/upload-artifact@main
      with:
        name: openwrt${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
